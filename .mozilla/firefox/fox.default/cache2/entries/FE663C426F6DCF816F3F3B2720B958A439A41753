dojo.provide("srmdojoc.form._DateTimeCombo");

dojo.require("dojo.date.stamp");

dojo.require("dijit._Widget");
dojo.require("dijit._Templated");
dojo.require("dijit._Calendar");



dojo.require("dijit.form.TimeTextBox");

dojo.declare("srmdojoc.form._DateTimeCombo",
	[dijit._Widget, dijit._Templated],
{

	//return a Date object and the code will use hours,min,seconds from it
	//it will be invoked only if the time picker is empty	
	defaultTime: function ( ) { var res= new Date(); res.setHours(0,0,0); return res;},
        mornHours:8,
        mornMin:0,
        afterHours:16,
        afterMin:0,
        noonHours:12,
        noonMin:0,
        
	/* note that Id of this table below is the same as this.id
	it is automagically generated by dojo */
	templateString:
	"	<table  width=\"auto\" align=\"center\" height=\"100%\" class=\"dojoxDateTimeCombo\" waiRole=\"presentation\">\
               <tr align=\"center\" style=\"width:auto;vertical-align:middle;text-align:middle;\"  valign=\"middle\">\
		<td  align=\"center\" style=\"padding-left:auto;margin-left:auto;padding-right:auto;margin-right:auto;vertical-align:middle;text-align:middle;\" valign=\"middle\">\
			<span title=\"Morning Time\" style=\"text-align:center;vertical-align:middle;\" dojoAttachPoint=\"mornTime\" class=\"dijitCalendarMonthLabel\">Morn</span>\
                        <span  style=\"text-align:center;vertical-align:middle;\" class=\"dijitCalendarMonthLabel\">|</span>\
                        <span title=\"Noon Time\" style=\"text-align:center;vertical-align:middle;\"  dojoAttachPoint=\"noonTime\" class=\"dijitCalendarMonthLabel\">Noon</span>\
                        <span style=\"text-align:center;vertical-align:middle;\"  class=\"dijitCalendarMonthLabel\">|</span>\
                        <span title=\"Afternoon Time\" style=\"text-align:center;vertical-align:middle;\"  dojoAttachPoint=\"afterTime\" class=\"dijitCalendarMonthLabel\">After</span>\
                        <span style=\"text-align:center;vertical-align:middle;\"  class=\"dijitCalendarMonthLabel\">|</span>\
                        <span title=\"Current Time\" style=\"text-align:center;vertical-align:middle;\" dojoAttachPoint=\"nowTime\" class=\"dijitCalendarMonthLabel\">Now</span>\
		</td>\
		</tr>\
		<tr align=\"center\"  style=\"width:auto;vertical-align:middle;text-align:middle;\"  valign=\"middle\" >\
		<td  align=\"center\" style=\"padding-left:auto;margin-left:auto;padding-right:auto;margin-right:auto;vertical-align:middle;text-align:middle;\"  valign=\"middle\">\
			<input dojoAttachPoint=\"calendar\" dojoType=\"dijit._Calendar\"></input>\
		</td>\
		</tr>\
		<tr align=\"center\"  style=\"width:auto;vertical-align:middle;text-align:middle;\"  valign=\"middle\" >\
		<td align=\"center\" style=\"vpadding-left:auto;margin-left:auto;padding-right:auto;margin-right:auto;ertical-align:middle;text-align:middle;\"  valign=\"middle\">\
			<input style=\"width:130px;\" constraints=\"{timePattern:'HH:mm'}\" dojoAttachPoint=\"timePicker\" dojoType=\"dijit.form.TimeTextBox\"></input>\
		</td>\
		</tr>\
                  	</table>\
	",

	widgetsInTemplate: true,

	constructor: function (arg)
	{			
	},
	postMixInProperties: function() 
	{		
		this.inherited(arguments);		
	},

	postCreate: function()
	{
			
	
		this.inherited(arguments);
		this.connect(this.calendar, "onValueSelected", "_onValueSelected");
                this.connect(this.mornTime, "onclick", "setCustomTimeValue");
                this.connect(this.mornTime, "onmouseover", "setCustomTimeLabelStyle");
                this.connect(this.noonTime, "onmouseover", "setCustomTimeLabelStyle");
                this.connect(this.noonTime, "onclick", "setCustomTimeValue");
                this.connect(this.afterTime, "onmouseover", "setCustomTimeLabelStyle");
                this.connect(this.afterTime, "onclick", "setCustomTimeValue");
                this.connect(this.nowTime, "onmouseover", "setCustomTimeLabelStyle");
                this.connect(this.nowTime, "onclick", "setCustomTimeValue");
	
	},
	pickerPostOpen_fn: function (parent_inst)
	{
		/* if there is something in the calendar value then set the pickers to 
		that */
		
		var parent_value=parent_inst.value;
                if(!isNaN(parent_inst.mornHours))
                  this.mornHours = parent_inst.mornHours;
                if(!isNaN(parent_inst.mornMin))
                  this.mornMin = parent_inst.mornMin;
                  
                if(!isNaN(parent_inst.noonHours))
                  this.noonHours = parent_inst.noonHours;
                if(!isNaN(parent_inst.noonMin))
                  this.noonMin = parent_inst.noonMin;
                  
                if(!isNaN(parent_inst.afterHours))
                  this.afterHours = parent_inst.afterHours;
                if(!isNaN(parent_inst.afterMin))
                  this.afterMin = parent_inst.afterMin;
		if (parent_value !==null && parent_value !=="")
		{
			this.setValue(parent_value);
		}
	
	
		dojo.query('.dijitValidationIcon',this.id)
			.style({
				width:"0px",
				visiblity:"hidden"});
	
		dojo.query('.dijitValidationIconText',this.id)
			.style({
				width:"0px",
				visiblity:"hidden"});

		
		var styleProp = (!dojo.isIE)?{
					'border-collapse': 'collapse',
					"padding": '0px',
					"margin": '0pt',
                                        "align":"center",
                                         "display": 'table',
                                        "backgroundColor":'#F8F8FF',
                                        "border": '1px solid #CCCCCC'				
				}:
                                {
					'border-collapse': 'collapse',
					"padding": '0px',
					"margin": '0pt',
                                        "align":"center",
                                       "backgroundColor":'#F8F8FF',
                                        "border": '1px solid #CCCCCC'				
				}
		dojo.style(this.id,styleProp);
				
	

	},

	//expects a valid date object
	setValue: function(value)
	{
		if (value!==null)
		{
			
                        this.calendar.setValue(value);
			this.timePicker.setValue(value);
		}		
	},
        setCustomTimeValue: function(evt)
        {
          if (evt == undefined)
            evt = window.event;
          var ele = evt.currentTarget; 
          this.mornTime.style.backgroundColor = '';
          this.noonTime.style.backgroundColor = '';
          this.afterTime.style.backgroundColor = '';
          this.nowTime.style.backgroundColor = '';
          
          ele.style.backgroundColor = '#5CB3FF';
          var d = new Date();
          if (ele.innerHTML == "Morn")
            d.setHours(this.mornHours,this.mornMin,0);
          else if (ele.innerHTML == "After")
            d.setHours(this.afterHours,this.afterMin,0);
          else if (ele.innerHTML == "Noon")
            d.setHours(this.noonHours,this.noonMin,0); 
          else 
            d.setHours(d.getHours(),d.getMinutes(),0);   

          this.timePicker.setValue(d);
        
        },
        setCustomTimeLabelStyle: function(evt)
        {
          if (evt == undefined)
            evt = window.event;
          var ele = evt.currentTarget;  
          ele.style.cursor='pointer';
        
        },
	//return a valid date object constructed from combination
	//of the date in the calendar and time in the time picker.
	getValue: function()
	{
		var value = this.calendar.value; 		
		var result=value;		
		if (this.timePicker.value !==null)
		{
			if (  (this.timePicker.value instanceof Date)===true)
			{
				result.setHours(this.timePicker.value.getHours(),
				this.timePicker.value.getMinutes(),
				this.timePicker.value.getSeconds());
				return result;
			}
		}
		else
		{
			var defTime=this.defaultTime();
			result.setHours(defTime.getHours(),
						defTime.getMinutes(),
						defTime.getSeconds());
			return result;					
		}		
	},

	_onValueSelected: function()
	{
		this.onValueSelected(this.getValue());
	},

	onValueSelected: function(value) {}
	
});
	
§Îº`©–      ]÷·+]÷·+A"+_Î¿Î   V    :https://support.us.oracle.com/oip/faces/secure/srm/js/srmdojoc/form/_DateTimeCombo.js necko:classified 1 strongly-framed 1 security-info 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 request-method GET response-head HTTP/1.1 200 OK
Date: Sun, 08 Dec 2019 23:50:38 GMT
Server: Oracle-Application-Server-10g
Cache-Control: public, max-age=31536000
Expires: Mon, 07 Dec 2020 23:50:38 GMT
Content-Location: /secure/srm/js/srmdojoc/form/_DateTimeCombo.js
Last-Modified: Sat, 19 Oct 2019 05:24:10 GMT
Content-Type: application/x-javascript
 original-response-headers Date: Sun, 08 Dec 2019 23:50:38 GMT
Server: Oracle-Application-Server-10g
Cache-Control: public, max-age=31536000
Expires: Mon, 07 Dec 2020 23:50:38 GMT
Set-Cookie: JSESSIONID=febb8df2c2c1e38f945bfc47f235eabf2d33a5217e799a85fce3955bbf5cb5d9.e34NchyKaheMai0TbNmPbxaObNv0; path=/oip; secure
Content-Location: /secure/srm/js/srmdojoc/form/_DateTimeCombo.js
Last-Modified: Sat, 19 Oct 2019 05:24:10 GMT
Keep-Alive: timeout=2, max=1013
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: application/x-javascript
 uncompressed-len 0 net-response-time-onstart 273 net-response-time-onstop 278    +